# syntax=docker/dockerfile:1.5.2
# based on: https://github.com/vercel/turbo/blob/main/examples/with-docker/apps/api/Dockerfile

FROM node:20.2-alpine3.17 as base

# adding apk deps to avoid node-gyp related errors and some other stuff. adds turborepo globally
RUN apk add -f --update --no-cache --virtual .gyp nano bash libc6-compat python3 make g++ \
    && npm install -g turbo \
    && npm install -g pnpm \
    && apk del .gyp

#############################################
FROM base AS pruned
WORKDIR /app
ARG APP=api

COPY . .

# see https://turbo.build/repo/docs/reference/command-line-reference#turbo-prune---scopetarget
RUN turbo prune --scope=$APP --docker

#############################################
FROM base AS installer
WORKDIR /app
ARG APP=api

COPY --from=pruned /app/out/json/ .
COPY --from=pruned /app/out/pnpm-lock.yaml /app/pnpm-lock.yaml
COPY --from=pruned /app/out/pnpm-workspace.yaml /app/pnpm-workspace.yaml
COPY apps/${APP}/package.json /app/apps/${APP}/package.json

RUN pnpm install --prefer-offline --frozen-lockfile

COPY --from=pruned /app/out/full/ .
COPY ../../turbo.json turbo.json

# For example: `--filter=frontend^...` means all of frontend's dependencies will be built, but not the frontend app itself (which we don't need to do for dev environment)
RUN turbo run build --no-cache --filter=${APP}^...

# re-running pnpm ensures that dependencies between workspaces are linked correctly
RUN pnpm install --prefer-offline --frozen-lockfile

#############################################
FROM base AS runner
WORKDIR /app

COPY --from=installer /app .

CMD [ "turbo", "run", "dev", "--filter=api" ]